Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                              uart.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
usbTxStatus1        0xc               usbdrv/usbdrv.o
sendEmptyFrame      0x1               main.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
sck_spsr            0x1               isp.o
ispTransmit         0x2               isp.o
rx_buf              0x88              uart.o
sck_spcr            0x1               isp.o
iwptr               0x1               uart.o
tx_buf              0x100             uart.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o
sck_sw_delay        0x1               isp.o
urptr               0x1               uart.o
uwptr               0x1               uart.o
irptr               0x1               uart.o
usbTxStatus3        0xc               usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD uart.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x15c2
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068       0x2e usbdrv/usbdrv.o
                0x0000000000000068                usbDescriptorString0
                0x000000000000006c                usbDescriptorStringVendor
                0x0000000000000088                usbDescriptorStringDevice
 .progmem.data  0x0000000000000096       0x79 main.o
                0x0000000000000096                deviceDescrAsp
                0x00000000000000a8                deviceDescrCDC
                0x0000000000000110                . = ALIGN (0x2)
 *fill*         0x000000000000010f        0x1 00
                0x0000000000000110                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000110        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000110                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000110                __ctors_start = .
 *(.ctors)
                0x0000000000000110                __ctors_end = .
                0x0000000000000110                __dtors_start = .
 *(.dtors)
                0x0000000000000110                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000110        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x0000000000000110                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000110        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000011c       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x000000000000011c                __do_copy_data
 .init4         0x0000000000000132       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000132                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000142        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000000000014a        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x000000000000014a                __vector_22
                0x000000000000014a                __vector_24
                0x000000000000014a                __vector_12
                0x000000000000014a                __bad_interrupt
                0x000000000000014a                __vector_6
                0x000000000000014a                __vector_3
                0x000000000000014a                __vector_23
                0x000000000000014a                __vector_25
                0x000000000000014a                __vector_11
                0x000000000000014a                __vector_13
                0x000000000000014a                __vector_17
                0x000000000000014a                __vector_19
                0x000000000000014a                __vector_7
                0x000000000000014a                __vector_5
                0x000000000000014a                __vector_4
                0x000000000000014a                __vector_9
                0x000000000000014a                __vector_2
                0x000000000000014a                __vector_21
                0x000000000000014a                __vector_15
                0x000000000000014a                __vector_8
                0x000000000000014a                __vector_14
                0x000000000000014a                __vector_10
                0x000000000000014a                __vector_16
                0x000000000000014a                __vector_18
                0x000000000000014a                __vector_20
 .text          0x000000000000014e      0x32c usbdrv/usbdrv.o
                0x000000000000014e                usbInit
                0x0000000000000170                usbSetInterrupt3
                0x00000000000001b6                usbSetInterrupt
                0x00000000000001fc                usbPoll
 .text          0x000000000000047a      0x290 usbdrv/usbdrvasm.o
                0x000000000000047a                usbCrc16
                0x00000000000004a4                usbCrc16Append
                0x00000000000004ac                __vector_1
 .text          0x000000000000070a        0x0 usbdrv/oddebug.o
 .text          0x000000000000070a      0x47a isp.o
                0x000000000000070a                spiHWenable
                0x0000000000000718                ispSetSCKOption
                0x00000000000007e6                ispDelay
                0x00000000000007f6                ispConnect
                0x000000000000083a                ispDisconnect
                0x000000000000084a                ispTransmit_sw
                0x000000000000088c                ispTransmit_hw
                0x0000000000000898                ispEnterProgrammingMode
                0x000000000000092a                ispReadFlash
                0x0000000000000992                ispReadEEPROM
                0x00000000000009ce                ispWriteEEPROM
                0x0000000000000a18                ispFlushPage
                0x0000000000000acc                ispWriteFlash
 .text          0x0000000000000b84       0x1a clock.o
                0x0000000000000b84                clockWait
 .text          0x0000000000000b9e      0x1c2 uart.o
                0x0000000000000b9e                uartInit
                0x0000000000000c30                uartPoll
 .text          0x0000000000000d60      0x81a main.o
                0x0000000000000d60                usbFunctionDescriptor
                0x0000000000000db8                usbFunctionSetup_cdc
                0x0000000000000e0a                usbFunctionRead_cdc
                0x0000000000000e3a                usbFunctionWriteOut_cdc
                0x0000000000000e7e                usbFunctionWriteOut
                0x0000000000000eca                usbFunctionWrite_cdc
                0x0000000000000f3a                main
                0x0000000000001038                usbFunctionWrite_asp
                0x0000000000001186                usbFunctionWrite
                0x00000000000011a0                usbFunctionRead_asp
                0x0000000000001244                usbFunctionRead
                0x0000000000001284                usbFunctionSetup_asp
                0x0000000000001560                usbFunctionSetup
 .text          0x000000000000157a        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000157a        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x000000000000157a        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000157a        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x000000000000157a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000157a       0x44 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
                0x000000000000157a                __udivmodsi4
 .text.libgcc   0x00000000000015be        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000015be        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000015be        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000000000015be                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000015be        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00000000000015be                exit
                0x00000000000015be                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000015be        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000015c2                _etext = .

.data           0x0000000000800100        0xe load address 0x00000000000015c2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x2 usbdrv/usbdrv.o
                0x0000000000800100                usbTxLen
 .data          0x0000000000800102        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800102        0x0 usbdrv/oddebug.o
 .data          0x0000000000800102        0x0 isp.o
 .data          0x0000000000800102        0x0 clock.o
 .data          0x0000000000800102        0x0 uart.o
 .data          0x0000000000800102        0xb main.o
                0x0000000000800102                prgMode
 .data          0x000000000080010d        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x000000000080010d        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x000000000080010d        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080010d        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080010e                . = ALIGN (0x2)
 *fill*         0x000000000080010d        0x1 00
                0x000000000080010e                _edata = .
                0x000000000080010e                PROVIDE (__data_end, .)

.bss            0x000000000080010e      0x1f2
                0x000000000080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080010e        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .bss           0x000000000080010e        0x1 usbdrv/usbdrv.o
 .bss           0x000000000080010f        0x0 usbdrv/usbdrvasm.o
 .bss           0x000000000080010f        0x0 usbdrv/oddebug.o
 .bss           0x000000000080010f        0x0 isp.o
 .bss           0x000000000080010f        0x0 clock.o
 .bss           0x000000000080010f        0x0 uart.o
 .bss           0x000000000080010f       0x1d main.o
 .bss           0x000000000080012c        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080012c        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080012c        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080012c        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080012c       0x42 usbdrv/usbdrv.o
                0x000000000080012c                usbTxBuf
                0x0000000000800137                usbTxStatus1
                0x0000000000800143                usbDeviceAddr
                0x0000000000800144                usbRxToken
                0x0000000000800145                usbInputBufOffset
                0x0000000000800146                usbMsgPtr
                0x0000000000800148                usbRxLen
                0x0000000000800149                usbNewDeviceAddr
                0x000000000080014a                usbCurrentTok
                0x000000000080014b                usbConfiguration
                0x000000000080014c                usbRxBuf
                0x0000000000800162                usbTxStatus3
 COMMON         0x000000000080016e        0x5 isp.o
                0x000000000080016e                sck_spsr
                0x000000000080016f                ispTransmit
                0x0000000000800171                sck_spcr
                0x0000000000800172                sck_sw_delay
 COMMON         0x0000000000800173      0x18c uart.o
                0x0000000000800173                rx_buf
                0x00000000008001fb                iwptr
                0x00000000008001fc                tx_buf
                0x00000000008002fc                urptr
                0x00000000008002fd                uwptr
                0x00000000008002fe                irptr
 COMMON         0x00000000008002ff        0x1 main.o
                0x00000000008002ff                sendEmptyFrame
                0x0000000000800300                PROVIDE (__bss_end, .)
                0x00000000000015c2                __data_load_start = LOADADDR (.data)
                0x00000000000015d0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800300        0x0
                0x0000000000800300                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800300                PROVIDE (__noinit_end, .)
                0x0000000000800300                _end = .
                0x0000000000800300                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6b4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
