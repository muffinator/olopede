Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
sck_spsr            0x1               isp.o
ispTransmit         0x2               isp.o
sck_spcr            0x1               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o
sck_sw_delay        0x1               isp.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xf4c
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000068       0x52 usbdrv/usbdrv.o
                0x00000068                usbDescriptorString0
                0x0000006c                usbDescriptorStringVendor
                0x00000088                usbDescriptorStringDevice
                0x00000096                usbDescriptorDevice
                0x000000a8                usbDescriptorConfiguration
                0x000000ba                . = ALIGN (0x2)
                0x000000ba                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000ba        0x0 linker stubs
 *(.trampolines*)
                0x000000ba                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000ba                __ctors_start = .
 *(.ctors)
                0x000000ba                __ctors_end = .
                0x000000ba                __dtors_start = .
 *(.dtors)
                0x000000ba                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000ba        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x000000ba                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000ba        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000c6       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x000000c6                __do_copy_data
 .init4         0x000000dc       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x000000dc                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ec        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000f4        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x000000f4                __vector_22
                0x000000f4                __vector_24
                0x000000f4                __vector_12
                0x000000f4                __bad_interrupt
                0x000000f4                __vector_6
                0x000000f4                __vector_3
                0x000000f4                __vector_23
                0x000000f4                __vector_25
                0x000000f4                __vector_11
                0x000000f4                __vector_13
                0x000000f4                __vector_17
                0x000000f4                __vector_19
                0x000000f4                __vector_7
                0x000000f4                __vector_5
                0x000000f4                __vector_4
                0x000000f4                __vector_9
                0x000000f4                __vector_2
                0x000000f4                __vector_21
                0x000000f4                __vector_15
                0x000000f4                __vector_8
                0x000000f4                __vector_14
                0x000000f4                __vector_10
                0x000000f4                __vector_16
                0x000000f4                __vector_18
                0x000000f4                __vector_20
 .text          0x000000f8      0x276 usbdrv/usbdrv.o
                0x000000f8                usbInit
                0x00000106                usbPoll
 .text          0x0000036e      0x25a usbdrv/usbdrvasm.o
                0x0000036e                usbCrc16
                0x00000398                usbCrc16Append
                0x000003a0                __vector_1
 .text          0x000005c8        0x0 usbdrv/oddebug.o
 .text          0x000005c8      0x47a isp.o
                0x000005c8                spiHWenable
                0x000005d6                ispSetSCKOption
                0x000006a4                ispDelay
                0x000006b4                ispConnect
                0x000006f8                ispDisconnect
                0x00000708                ispTransmit_sw
                0x0000074a                ispTransmit_hw
                0x00000756                ispEnterProgrammingMode
                0x000007e8                ispReadFlash
                0x00000850                ispReadEEPROM
                0x0000088c                ispWriteEEPROM
                0x000008d6                ispFlushPage
                0x0000098a                ispWriteFlash
 .text          0x00000a42       0x1a clock.o
                0x00000a42                clockWait
 .text          0x00000a5c      0x4ec main.o
                0x00000a5c                main
                0x00000a7a                usbFunctionWrite
                0x00000bc8                usbFunctionRead
                0x00000c6c                usbFunctionSetup
 .text          0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000f48                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000f48                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000f48        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00000f48                exit
                0x00000f48                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000f48        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000f4c                _etext = .

.data           0x00800100        0x2 load address 0x00000f4c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x2 usbdrv/usbdrv.o
                0x00800100                usbTxLen
 .data          0x00800102        0x0 usbdrv/usbdrvasm.o
 .data          0x00800102        0x0 usbdrv/oddebug.o
 .data          0x00800102        0x0 isp.o
 .data          0x00800102        0x0 clock.o
 .data          0x00800102        0x0 main.o
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800102                . = ALIGN (0x2)
                0x00800102                _edata = .
                0x00800102                PROVIDE (__data_end, .)

.bss            0x00800102       0x45
                0x00800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .bss           0x00800102        0x1 usbdrv/usbdrv.o
 .bss           0x00800103        0x0 usbdrv/usbdrvasm.o
 .bss           0x00800103        0x0 usbdrv/oddebug.o
 .bss           0x00800103        0x0 isp.o
 .bss           0x00800103        0x0 clock.o
 .bss           0x00800103       0x15 main.o
 .bss           0x00800118        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x00800118        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800118        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800118       0x2a usbdrv/usbdrv.o
                0x00800118                usbTxBuf
                0x00800123                usbDeviceAddr
                0x00800124                usbRxToken
                0x00800125                usbInputBufOffset
                0x00800126                usbMsgPtr
                0x00800128                usbRxLen
                0x00800129                usbNewDeviceAddr
                0x0080012a                usbCurrentTok
                0x0080012b                usbConfiguration
                0x0080012c                usbRxBuf
 COMMON         0x00800142        0x5 isp.o
                0x00800142                sck_spsr
                0x00800143                ispTransmit
                0x00800145                sck_spcr
                0x00800146                sck_sw_delay
                0x00800147                PROVIDE (__bss_end, .)
                0x00000f4c                __data_load_start = LOADADDR (.data)
                0x00000f4e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800147        0x0
                0x00800147                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800147                PROVIDE (__noinit_end, .)
                0x00800147                _end = .
                0x00800147                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
